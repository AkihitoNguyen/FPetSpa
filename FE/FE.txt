
            {/* Comment Submission Form */}
            <div className="mt-8 bg-gray-100 p-6 rounded-lg shadow-md">
              <h3 className="text-lg font-medium text-gray-900">Leave a Comment</h3>
              {user ? (
                <form onSubmit={handleSubmitComment} className="mt-4 space-y-4">
                  <div>
                    <label htmlFor="commentText" className="block text-sm font-medium text-gray-700">Comment</label>
                    <textarea
                      placeholder='Give your feedback....'
                      id="commentText"
                      name="commentText"
                      value={commentText}
                      onChange={(e) => setCommentText(e.target.value)}
                      rows="4"
                      required
                      className="w-full bg-slate-100 text-slate-600 h-28 placeholder:text-slate-600 placeholder:opacity-50 border border-slate-200 col-span-6 resize-none outline-none rounded-lg p-2 duration-300 focus:border-slate-600"
                    ></textarea>
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700">Rating</label>
                    <div className="flex space-x-1 mt-1">
                      {renderStarRating()}
                    </div>
                  </div>
                  <div>
                    <button
                      type="submit"
                      className="inline-flex items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white hover:bg-indigo-700 transition duration-200 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
                    >Submit</button>
                  </div>
                </form>
              ) : (
                <div className="mt-4 text-sm text-gray-600">
                  Please <a href="/login" className="text-indigo-600 hover:text-indigo-500">login</a> to leave a comment.
                </div>
              )}
            </div>



              const handleSubmitComment = async (e) => {
    e.preventDefault();

    const newComment = {
      userFeedBackId: user.userId,
      productId: productId,
      pictureName: '',
      star: commentStar,
      description: commentText,
    };

    try {
      const response = await fetch('https://localhost:7055/api/FeedBack/Create', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${user.accessToken}`
        },
        body: JSON.stringify(newComment),
      });

      if (!response.ok) {
        throw new Error('Network response was not ok');
      }

      const result = await response.json();
      setComments([...comments, result]);
      setCommentName('');
      setCommentText('');
      setCommentStar(5);
    } catch (error) {
      console.error("Error submitting comment:", error);
    }
  };